import re

# find last CAPTIALISED WORDS

#txt = "FINANCIAL INFORMATION SYSTEMS Course Code: 704.5O500 Inactive   Credits 15 Level 5 Teaching hours    Tutor/Lecturer directed hours 60   Self-directed Hours 90   Total hours of student learning 150   Pre-requisites: Nil Co-requisites: Nil COURSE AIM To understand and apply theories and computerised tools associated with business processes to business structures, business planning and accounting. LEARNING OUTCOMES On successful completion of this course, students will be able to: 1. Demonstrate understanding of organisational entities. 2. Demonstrate understanding of business planning. 3. Apply theories and tools associated with accounting. TOPICS / INDICATIVE CONTENT  Organisational and business entities  Lining the nature of business to organisational type  Environmental factors which influence businesses  Financial budgets and business plans for small businesses  Information sources, transaction records, tracking data flow, ledger accounts, trial balances  Statements of financial performance and position  Financial analysis  ASSESSMENT Assessment Method: Achievement Based  Assessments: No. Assessment Event Learning Outcomes  Weighting 1 Short answer test 1 20% 2 Business Plan 1, 2 40% 3 Case Study 3 40%    REQUIREMENT FOR SUCCESSFUL COMPLETION To pass this, course learners must achieve a minimum of 40% in every course assessment event and a minimum of 50% cumulatively for the course.    LEARNING AND TEACHING DELIVERY MODE Face to face / Blended / Distance (Online) LEARNING AND TEACHING METHODS Lectures, tutorials, computer labs LEARNING AND TEACHING RESOURCES     FUNDAMENTAL WEB PROGRAMMING AND DESIGN"
#txt = "LEARNING AND PRESENTATION Course Code: 704.6T660 Elective Effective from: January 2019  Credits 15 Level 6 Learning Hours    Tutor/Lecturer directed hours 50   Self-directed Hours 100   Total hours of student learning 150   Pre-requisites: Nil Co-requisites: Nil COURSE AIM To plan, develop, deliver and evaluate a computer based interactive training session for a workplace setting.  LEARNING OUTCOMES On successful completion of this course, students will be able to: 1. Analyse the components of training. 2. Plan, deliver and evaluate the effectiveness of a computer based interactive training programme to deliver a skill or topic. 3. Presentation on the theory and practice of computer based training. TOPICS / INDICATIVE CONTENT  Training principles  Interactive instruction techniques   Presentation skills  E-Learning components   E-learning design and development  Evaluate  implement  Techniques such as brainstorming and Q/A ASSESSMENT Assessment Method: Achievement Based  Assessments: No. Assessment Event Learning Outcomes  Weighting 1 Evidential Portfolio (may include but not limited to: tests, assignments, case studies presentations, reports, labs, projects and final examination) 1, 2, 3 100%    REQUIREMENT FOR SUCCESSFUL COMPLETION To pass this, course learners must achieve a minimum of 50% for the course.    LEARNING AND TEACHING DELIVERY MODE Face to face / Blended / Distance (Online) LEARNING AND TEACHING METHODS Lectures, tutorials, case studies, computer labs LEARNING AND TEACHING RESOURCES To be provided in class.     FINANCIAL INFORMATION SYSTEMS"
#txt = "PROGRAMME DESIGN Course Code: 704.6D620 Elective  Effective from: January 2019  Credits 15 Level 6 Learning Hours    Tutor/Lecturer directed hours 50   Self-directed Hours 100   Total hours of student learning 150   Pre-requisites: 704.5D520 Programming 1  Co-requisites: Nil COURSE AIM To design quality software commonly used in business using a variety of techniques; and to engage with system modelling and the full software engineering life-cycle using case studies, supported by CASE tools, to identify alternative approaches to software development.   LEARNING OUTCOMES On successful completion of this course, students will be able to: 1. Analyse algorithm design in terms of principles of good design and performance. 2. Model and design software typically required in industry. 3. Implement processes to ensure quality software. TOPICS / INDICATIVE CONTENT  Overview of Software Development Processes o Traditional Software Development Life o AGILE Software Development Approach o Challenges/Issues of Software Development  Principles of good design   Unified Modelling Language with CASE tool o Requirement and Analysis Modelling  o Design Models  Version Control  Quality Assurance and Maintenance ASSESSMENT Assessment Method:  Achievement Based  Assessments: No. Assessment Event Learning Outcomes  Weighting 1 Practical Prototype Design 2, 3 50%  3 Test /Analysis 1, 2 50% REQUIREMENT FOR SUCCESSFUL COMPLETION To pass this, course learners must achieve a minimum of 50% cumulatively for the course.      LEARNING AND TEACHING DELIVERY MODE Face to face / Blended / Distance (Online)  LEARNING AND TEACHING RESOURCES Tools: JADE, Microsoft Visual Studio, UML CASE, Tools, NORTHNET, LMS  To be provided in class by tutor.     PROGRAMMING 1"
x = re.search("LEARNING AND TEACHING RESOURCES([' '][A-Z/-].+)([A-Z]|[0-9])$", txt)
if x is None:
    x = re.search("LEARNING AND TEACHING RESOURCES[' ']*([' '][A-Z/-].+)([A-Z]|[0-9])$", txt)
    y = x.group()
else:   
    y = x.group()
print(y)   
z = re.search("([' ']?[A-Z]+)*([A-Z]|[' '][0-9])$", y)
print(z.group().strip())
#print(z.group())