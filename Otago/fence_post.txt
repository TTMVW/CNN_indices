IN503001 >>>>>><<Full name>> 1.1. Studio 2 <<Aim>> To introduce learners to user-centric and technical project planning techniques to create solutions to simple IT problems. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Employ sound communication in order to elicit user requirements to inform the planning process.  2. Work as a member of a team to produce a simple technical output. <<Content>> • Basic iterative development • UML • Basic project management skills and tools • Design thinking • Stand-up meetings • Client interviews • Introduction to user stories <<Prerequisites>> IN502001 <<Co_requisites>> None
IN510001/IX510001 >>>>>><<Full name>> 1.2. Programming 1 <<Aim>> To introduce learners to the concepts of program design and programming fundamentals. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Create programs using basic programming constructs and simple data structures to solve specified problems. 2. Apply a logic depiction method to decompose appropriate simple problems. <<Content>> • Program Design • Algorithms • Structured diagrams UML • If statements, Nested Ifs, Switch statements • Loops • Arrays • Data Types and Records • Reading Files of Records • Text files • Version control <<Prerequisites>> None <<Co_requisites>> None
IN511001/IX511001 >>>>>><<Full name>> 1.3. Programming 2 <<Aim>> To enable learners to build simple object-oriented (OO) applications and to identify situations that are most appropriate for OO implementation. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Build interactive, event-driven GUI applications using pre-built components. 2. Declare and implement user-defined classes using encapsulation, inheritance and polymorphism. <<Content>> IN511001 is a second programming course with a focus on Object Oriented programming, and as such uses an object oriented programming language and development environment. • Problem analysis and decomposition • Principles of good class design • Logic of basic algorithms • Use of core complex data structures • Good programming practices that are independent of the language or model used <<Prerequisites>> IN510001 <<Co_requisites>> None
IN512002/IX512002 >>>>>><<Full name>> 1.4. Fundamentals of Web Development <<Aim>> To enable learners to use basic technologies for the development of web-based functionality <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Develop simple web-based applications using industry relevant client/server-side programming languages and basic client/server communication.  2. Use industry relevant tools and workflows in the development of web-based applications. <<Content>> • Web communication (client/server relationship) • HTML, CSS and JavaScript • Libraries/frameworks • Responsive design • APIs • Basic deployment <<Prerequisites>> IN510001 <<Co_requisites>> None
IN515001/IX515001 >>>>>><<Full name>> 1.5. Introduction to Networks <<Aim>> To introduce learners to fundamental networking concepts and technologies.  To cover the basics of network theory and skills needed to implement a simple network. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Design and build a simple local area network using device addressing schemes and basic network configurations.  2. Configure and troubleshoot end-to-end connectivity between local and remote networks using security best practices. <<Content>> • OSI model • Types of networks • Application layer functionality • Transport layer protocols (TCP/UDP) • Network Layer protocols (IPv4) • Layer 3 Addressing and subnetting  • Data link layer concepts and addressing • Network cabling • Configuring and testing a network <<Prerequisites>> none <<Co_requisites>> None
IN520003/IX520002 >>>>>><<Full name>> 1.6. Platforms and Devices <<Aim>> The aim of this course is to enable learners to use a range of devices, platforms and concepts utilised within the IT industry. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Install and configure operating systems on devices for functionality and network connectivity.  2. Select and apply systems tools, command line and scripting to configure, maintain, and secure operating systems in local and virtual settings.  3. Troubleshoot hardware and operating system faults for the main components of a computer. <<Content>> • Installing, configuring and selecting PC hardware components • Operating systems installation and maintenance (systems tools) • Overview of operating systems (mobile, desktop, service, etc.) • Use a VM & develop basic understanding of virtualisation • Basic use of transmission protocols (e.g. FTP, SSH) • File systems • Backup and RAID systems • Troubleshooting hardware and software • Connecting and configuring devices (Bluetooth, Wi-Fi, printers, etc.)/Mounting drives • Command line proficiency • Basic network configuration • ‘Embedded’ (Raspberry Pi, Arduino, Development platforms) • Environmental impact of IT • Identify sustainability issues involved in purchasing, using and disposing of devices. <<Prerequisites>> None <<Co_requisites>> None
IN521001/IX521001 >>>>>><<Full name>> 1.7. Maths for IT <<Aim>> To introduce learners to mathematical concepts and methods that underpin computer systems.  This course is primarily sited within the field of discrete mathematics. <<Learning Outcome>> At the successful completion of this course, learners will be able to:  1. Use the mathematical structures and algorithms that underpin digital systems. 2. Apply mathematical methods to solve problems that are sited in an Information Technology context. <<Content>> All theoretical areas will be presented within an information technology context. • Logic circuits • Decimal and binary number systems • Vectors and matrices • Randomness and probability • Factorials, permutations and combinations • Check digits • Random number generation • Encryption • Algorithms, iteration, recursion • Hash tables and hash functions • Computational complexity <<Prerequisites>> none <<Co_requisites>> None
IN530151 >>>>>><<Full name>> 1.8. Year One Special Topic <<Aim>> This course is designed for learners to pursue an individual course of study which will focus in depth on a particular aspect of Information Technology. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyse a specific topic whilst applying the underlying principles and concepts to the field of study. <<Content>> The process may include • Producing a proposal for the Special Topic o Purpose and scope of the Special Topic identified o Skills and knowledge required in the Special Topic identified o Learning and assessment plan developed • Carrying out Special Topic work. o Work log/progress report compiled o Progress reviewed with supervisor o <<Prerequisites>> none <<Co_requisites>> None
IN606001 >>>>>><<Full name>> 1.9. Studio 3 <<Aim>> To enable learners to use an industry-relevant project management approach to produce simple, functional group outputs. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyse user requirements to inform technical project work and produce user-centric functionality. 2. Employ ethical and sustainable development methodologies and tools in a team environment. <<Content>> • Iterative design thinking strategies • User-driven development • Modern team collaboration and development frameworks • Sound communication and project management strategies • High-quality technical outputs <<Prerequisites>> IN503001 <<Co_requisites>> None
IN622001 >>>>>><<Full name>> 1.10. Studio 4 <<Aim>> To produce a professional, high-quality group project, adhering to industry-relevant quality assurance and ethical practices. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Select and apply industry-standard tools and processes to solve non-trivial problems in a team environment. 2. Analyse and manage development challenges to create production-quality outputs. <<Content>> • Security, privacy, quality, user experience and deployment • Modern quality assurance practices • Appropriate use of automation • Efficient cross-discipline teamwork <<Prerequisites>> IN606001 <<Co_requisites>> None
IN605001/IX605001 >>>>>><<Full name>> 1.11. Databases 2 <<Aim>> To give an understanding of the fundamentals of database management systems with emphasis on relational systems. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Plan and build a normalised relational database to solve a specified problem. 2. Use syntactically correct SQL to write database queries that ensure data integrity. <<Content>> • Role of relational databases and relational database management systems • Formal database theory – relational algebra, functional dependencies and normalisation. • Architecture of relational database management systems • Query construction and optimisation • Data modelling • Design and implementation of relational databases • Principles of database administration and database security <<Prerequisites>> IN505001, IN511001 <<Co_requisites>> None
IN607001 >>>>>><<Full name>> 1.12. Introductory Application Development Concepts <<Aim>> To introduce the concepts of application development including algorithms, data structures and design patterns that are required to use a simple, industry-relevant development framework. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Design and build  secure applications with dynamic database functionality following an appropriate software development methodology. <<Content>> • Server and client-side programming • Design patterns e.g. MVC (Model View Controller) • Database integration (ORMs) • Database migration • Automated testing • Session based authentication <<Prerequisites>> IN511001 <<Co_requisites>> None
IN502001 >>>>>><<Full name>> 1.13. Studio 1 <<Aim>> To introduce learners to the fundamentals of professionalism in a technical environment. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Communicate appropriately in informal and semi-formal written and verbal contexts. 2. Discern functional and non-functional aspects within a problem domain in the context of data modelling. 3. Use collaboration tools and workflows to contribute to a simple group project. <<Content>> • Problem domains • Design thinking • Introduction to databases • Time management • Report writing • Oral presentations • Version control (GitHub) • Object-oriented concepts <<Prerequisites>> None <<Co_requisites>> None
IN608001 >>>>>><<Full name>> 1.14. Intermediate Application Development Concepts <<Aim>> To extend the concepts of application development including algorithms, data structures and design patterns that are required to use a complex, industry-relevant frameworks or libraries. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Apply design patterns and programming principles using software development best practices. 2. Design and implement full-stack applications using industry relevant programming languages. <<Content>> • APIs (Application Programming Interfaces) • Database integration • Deployment • Design patterns • Frameworks or libraries • ORMs (Object-Relational Mappings) • Session based authentication • Automation testing • Security • Parallelism <<Prerequisites>> IN607001 <<Co_requisites>> None
IN615008 >>>>>><<Full name>> 1.15. Switching, Routing and Wireless Essentials <<Aim>> The aim of this course is to enable learners to apply knowledge of router and switch operation, network architecture and services to configure small-to-medium business networks. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1.         Design and build a network for availability and redundancy.   2.         Configure and troubleshoot flexible local area networks using virtual and wireless technologies. <<Content>> • Basic switching concepts and the operation of Cisco switches • Enhanced switching technologies such as VLANs, VLAN Trunking Protocol (VTP), Rapid • Spanning Tree Protocol (RSTP), Per VLAN Spanning Tree Protocol (PVSTP), and 802.1q • The purpose, nature, and operations of a router, routing tables, and the route lookup process • Static routing and default routing • How VLANs create logically separate networks and how routing occurs between them • Dynamic routing protocols, distance vector routing protocols, and link-state routing protocols • Basic operations of routers in a small routed network: • The purpose and types of access control lists (ACLs) • The operations and benefits of Dynamic Host Configuration Protocol (DHCP) • Wireless LAN concepts and configuration • LAN security concepts <<Prerequisites>> IN515001 <<Co_requisites>> None
IN616001 >>>>>><<Full name>> 1.16. Operating Systems Concepts <<Aim>> This course aims to introduce the basic mechanisms of an operating system, and its management among various components. Learners will navigate, configure, and manage contemporary operating systems for basic system administration. This course lays a solid foundation for more advanced courses in system administration, virtualization, and security. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Perform automated user and permissions management in a computing system. 2. Analyse and manage process, memory, storage, and network management modules in operating systems. 3. Evaluate the design and process models of contemporary operating systems. <<Content>> • Core operating system concepts: scheduling, memory management, process management • Operating system design aspects: monolithic vs microkernel, case study of Linux. • Linux shell commands and exploring system internals with shell  • User, process, file and memory management with Linux commands  • Customizing Linux Kernel and loadable kernel modules  • Process/Thread management and synchronization • Services and Daemons, networking interface  • Bash Scripting • Basic System Administration tasks with scripting  • File systems • Networking with Linux Systems <<Prerequisites>> IN510001 & IN520002 <<Co_requisites>> None
IN609001 >>>>>><<Full name>> 1.17. Operations Engineering 1 <<Aim>> This course will provide learners with the knowledge and hands-on skills to perform systems administration tasks securely within different computing platforms using the command line interface. <<Learning Outcome>> At the successful completion of this course, learners will be able to:  1. Identify the key tools/services for administering different computing systems 2. Develop advanced shell scripts to automate system administration tasks 3. Use cloud and directory services for enterprise computing infrastructure <<Content>> • Network and firewall configuration • Advanced user/group management and permissions • Advanced scripting for system administration • Ticketing for system administration • Backup and disaster recovery • Directory services in different OSs • Configuring and deploying cloud services and resources • Hardening operating systems and networks • Containers <<Prerequisites>> IN616001 <<Co_requisites>> None
IN620001 >>>>>><<Full name>> 1.18. Embedded Systems <<Aim>> To introduce learners to the core principles of computer hardware and architecture and to acquaint them with a range of embedded application contexts.  (This paper is not intended to provide the skills required to design a better CPU, nor is it intended to teach learners to write in assembler.) <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyse the parameters of a problem domain that can be solved with an embedded systems solution. 2. Implement a complete embedded systems solution that meets the requirements of solving a problem domain. <<Content>> • Low-level hardware (registers, buses, and clocks, memory, storage, I/O, addressing, etc.) • Low-level instruction processing • CPU design principles • High-level architecture (e.g. caching, VM, dedicated hardware, multicore processing, etc.) • Embedded application areas with microprocessors and microcontrollers  • Theory and principles of embedded/control systems • Embedded system hardware  • Embedded system software • Embedded system project work <<Prerequisites>> IN520002 <<Co_requisites>> None
IN621001 >>>>>><<Full name>> 1.19. Automation and Robotics <<Aim>> To extend and refine learners micro-electronics skills in order to build artefacts which are physically complex, behaviourally complex and highly interactive. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Apply core electronic and mechanical principles to robotics/automated systems design. 2. Design a robotics/automated solution to a specified problem following principles of interaction design. 3. Use an appropriate software development platform to implement simple interactive robotics/automated systems. <<Content>> • Discussion of historical development of automated systems • Survey of application areas • Robotics simulator work • Sensors • Hardware of robotics/automated/ubiquitous systems • Development software – options and issues • Interaction design – human factors and machine design principles • Project work – Design and construction of interactive robotics/automated systems <<Prerequisites>> IN620001 <<Co_requisites>> None
IN630151 >>>>>><<Full name>> 1.20. Year Two Special Topic <<Aim>> To allow learners to carry out semi-independent exploration into a specific information technology topic to a depth not supported by an existing Bachelor of Information Technology paper.  Learners will negotiate objectives, learning plan, assessment criteria and time frame with a supervising lecturer who will provide direction throughout the project. <<Learning Outcome>> At the successful completion of this course, learners will be able to:  1. Examine and discuss a specific topic whilst applying the underlying principles and concepts to the field of study. <<Content>> Learners will research and apply chosen aspects of their information technology topic.  Sources would typically include academic journals, textbooks, and credible web sites.  Selection and location of resource materials will be supported by a staff supervisor.  Content will include both theoretical material and applied skills development. <<Prerequisites>> 120 credits at L5 <<Co_requisites>> None
IN728001 >>>>>><<Full name>> 1.21. Studio 5 <<Aim>> To enable learners to apply technical skills within complex IT projects. To extend learner professional behaviour through group work, professional development activities and external engagement. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyse real-world problems and create IT systems to solve them; 2. Apply technical and theoretical skills to unfamiliar and complex situations; 3. Contribute as a member of a team in a structured development process. <<Content>> Learners complete the development of large, real client driven projects under supervision. <<Prerequisites>> IN622001 <<Co_requisites>> None
IN732001 >>>>>><<Full name>> 1.22. Studio 6 <<Aim>> To enable learners to extent their skills within a complex IT project. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Critically evaluate and apply a range of processes to unfamiliar and complex problems. 2. Engage in advanced study in specialist areas. 3. Demonstrate responsibility for leadership within a project group. <<Content>> Learners complete the development of large, real client driven projects under supervision. <<Prerequisites>> IN728001 <<Co_requisites>> None
IN703001 >>>>>><<Full name>> 1.23. Developing Flexible IT Courses <<Aim>> To prepare learners for the training role that is often performed by information technology professionals. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Design, create, implement and evaluate a computer-based tutorial to teach technical skills or knowledge to a specified audience. 2. Design, conduct and evaluate a blended IT training programme to meet a specified set of needs including Treaty of Waitangi considerations. <<Content>> • Evaluate training materials • Screen recording software • Writing interactive quizzes • Tutorial writing • Learning Tools • Learning styles and adult learners • Training needs analysis for a new system • Training methods • Conduct training sessions • Evaluation • Computer based training • Interactive facilitation <<Prerequisites>> IN502001 <<Co_requisites>> None
IN733001 >>>>>><<Full name>> 1.24. Quality Assurance and Software Testing <<Aim>> To lay the foundation for a potential career in the Information Technology field as a software tester.  To understand the fundamental principles and processes of software testing, including production of detailed test plans and effective test results.  To develop practical software testing skills enabling the production of more robust code. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Plan, execute and document the testing process using automated and manual tests. 2. Analyse and critique industry standard software testing theory, the significance of software testing and its place in the software development life cycle. <<Content>> • Static testing – reviews, walkthroughs, static analysis etc… • Dynamic testing ▪ Structure-based – statement, decision, condition ▪ Specification-based – equivalence partitioning, boundary analysis, state transition, decision table, use case ▪ Experience-based testing – error guessing, exploratory • Software Testing theory (including an ISTQB Foundation Level qualification) • Winapp driver and Appium • Selenium Webdriver   • Test Plan production – automated and flexible • Practical detection of errors in a variety of unfamiliar contexts  • Writing correct, clear, and professional test results to allow developers to reproduce and fix errors. • Researching and exploring the (ethical and social) implications of major software failures <<Prerequisites>> None <<Co_requisites>> None
IN705001/IX705001 >>>>>><<Full name>> 1.25. Databases 3 <<Aim>> To provide learners with skills and understanding necessary to design and implement enterprise databases, and to administer database management systems.  To become acquainted with the range of tools and platforms available for developing large databases.  To explore current areas of research in database implementation, use and management. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Implement troubleshooting techniques to solve complex database performance issues. 2. Design and develop relational databases to meet specified requirements that are subject to high-availability, high-reliability, security, and performance constraints. 3. Critically analyse database administrator tasks in order to determine a management approach. <<Content>> • Application areas • Information analysis techniques • Survey of modern software and hardware for database construction and management • Advanced data modelling • Use of stored procedures • Construction of complex queries • Transactions and concurrency • Advanced topics in data security • Data mining and other processing methodologies <<Prerequisites>> IN605001 <<Co_requisites>> None
IN724001/IX724001 >>>>>><<Full name>> 1.26. Security <<Aim>> To provide learners with theoretical knowledge and accompanying technical skills in the field of information security. Learners are guided through the process of identifying and analysing security threats and vulnerabilities, then mitigating them by implementing robust and industry-accepted solutions. The course uses an attack then defend mentality - allowing learners to learn how attacks are conducted, then mitigating the vulnerabilities. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyse and apply information security best practices to mitigate common applications, network and system security vulnerabilities for enterprise networks 2. Examine essential cryptography concepts and implement appropriate solutions to maintain information security requirements for modern information systems <<Content>> • Information security mechanisms • Cryptography • Network security • Web application security • Server hardening • Computer forensics <<Prerequisites>> IN616001 <<Co_requisites>> None
IN730001 >>>>>><<Full name>> 1.27. Advanced Application Development Concepts <<Aim>> To enable learners to build and deploy optimised and efficient applications using a range of advanced industry tools and frameworks. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Critically evaluate and implement a range of programming paradigms to solve unfamiliar problems. 2. Create efficient full-stack applications using advanced industry techniques, tools and frameworks. <<Content>> • Progressive web applications • Database replication • Advanced design patterns • Code optimisation e.g. tree shaking, code splitting, dynamic loading • Code minimisation and obfuscation • Code compression • Benchmarking tools • CDNs (Content Delivery Networks) • Client/server-side caching techniques • Message queues • WebSockets <<Prerequisites>> IN608001 <<Co_requisites>> None
IN711002 >>>>>><<Full name>> 1.28. Advanced Algorithms <<Aim>> To enable learners to use a wide variety of advanced algorithms and tools required for development of efficient solutions to complex computational problems. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Evaluate the ecosystem of algorithmic tools available to produce efficient software. 2. Implement appropriate algorithms and data structures to solve nontrivial computational problems. 3. Optimize the usage of computational resources while programming. <<Content>> • Genetic (i.e. evolutionary) algorithms • Computer graphics  • Modelling and simulation  • Natural language processing • Optimization  • Data analytics • Measuring algorithmic efficiency  • Industrial control • Signal processing • Block chain • Searching, sorting and hashing • Learning algorithms  • Security <<Prerequisites>> IN608001 <<Co_requisites>> None
IN721001/IX721001 >>>>>><<Full name>> 1.29. Mobile Application Development <<Aim>> To learn the specifics of mobile applications design and development. Learners will be able to develop a mobile application and publish it to a mainstream app store. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Implement and publish complete, non-trivial, industry-standard mobile applications following sound architectural and code-quality standards  2. Identify relevant use cases for a mobile computing scenario and incorporate them into an effective user experience design. 3. Follow industry standard software engineering practice in the design of mobile applications. <<Content>> • Interaction and interface design for mobile • Advantages and limitations of native mobile apps vs. web-based apps • User-centred design and testing • Hardware opportunities and constraints. • SDKs, APIs, libraries and other tools • Software architectures for mobile • Publishing policies and procedures <<Prerequisites>> IN607001 <<Co_requisites>> None
IN727001 >>>>>><<Full name>> 1.30. Artificial Intelligence and Data Science <<Aim>> The aim of this course is to enable learners to choose and deploy the appropriate machine intelligence tool to solve problems that demand a cognitive component. Possible applications are: computer vision, natural language processing, recommendation systems, data analytics, anomaly detection, conversational agents (i.e. chatbots), machine translation, autonomous navigation, robotic control and a myriad of others. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Analyze the principles, advantages, limitations, applications and implications of data-driven artificial intelligence to be a productive and responsible practitioner. 2. Choose, implement and evaluate models to solve machine learning problems. 3. Apply data science techniques to fetch, scrub, explore, manipulate, visualize, evaluate and interpret complex quantitative data. <<Content>> • Artificial neural network (convolutional, LSTMs, GRUs) • Web crawling and scraping to gather data • Data analytics • Transfer learning • Language models (word embeddings, contextualized word embeddings, chatbots) • Generative models (generative adversarial networks, Autoencoders) • Reinforcement learning • GPU computation • Ethics and AI • Learning theory (bias/variance tradeoffs, sensitivity/specificity trade-offs, validation, regularization, learning curves); • Machine intelligence APIs <<Prerequisites>> IN511001, IN521001 <<Co_requisites>> None
IN734001 >>>>>><<Full name>> 1.31. Operations Engineering 2 <<Aim>> To enable learners to practice the configuration, management and troubleshooting of systems within an enterprise network including aspects of both application and operating systems components. <<Learning Outcome>> At the successful completion of this course, students will be able to: 1. Implement advanced system operations and administration tasks for Information Technology systems. 2. Formulate disaster recovery and mitigation policies for enterprise infrastructures. 3. Discuss aspects of ethics and social responsibility in a systems administration role. 4. Use a configuration management scheme for systems operation and management. <<Content>> • Building and distributing packages  • Managing different servers for system operations • Performance tuning and troubleshooting of computing systems • Deploying network monitoring systems • Implement configuration management systems for systems operation • Social responsibility and ethics of working in a systems administration role. • Configuration of backup systems for disaster recovery – including backup, recovery and availability management • Implementing system administration best practices <<Prerequisites>> IN609001 <<Co_requisites>> None
IN729002 >>>>>><<Full name>> 1.32. UX Engineering <<Aim>> To enable learners to build upon front-end development skills with a view to designing and building screens with inclusive, flexible and sound user experience. This course highlights the importance of both technical and design excellence in sustainable and ethical software development. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Use advanced front-end technologies and workflows to efficiently develop high-quality user interfaces.  2. Design and build optimal solutions to complex user experience problems. <<Content>> • Design thinking processes • Usability principles, metrics, and heuristics • UXD research and planning techniques • User’s needs and requirements, including those with special needs • User testing and design testing  • Advanced CSS and preprocessors • Semantic, inclusive and sustainable markup <<Prerequisites>> IN608001 <<Co_requisites>> None
IN720001/IX720001 >>>>>><<Full name>> 1.33. Administering a Virtual Infrastructure <<Aim>> Learners will gain in-depth knowledge and techniques used to efficiently implement, optimize and trouble-shoot a virtual infrastructure. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Plan, install and configure a virtual infrastructure with storage and networking 2. Deploy virtual machines and virtual applications in cloud platforms 3. Establish, monitor and troubleshoot service levels for enterprise cloud infrastructure 4. Critically analyse key performance factors in virtualised systems. <<Content>> • Install and configure a virtual environment • Management techniques and key performance metrics used to identify CPU, network, memory and application performance bottlenecks in a virtualised environment. • SAN planning and implementation • Troubleshooting hypervisor problems <<Prerequisites>> IN719001 <<Co_requisites>> None
IN723001 >>>>>><<Full name>> 1.34. Advanced Networking <<Aim>> To provide learners with an understanding of how to evaluate and apply advanced networking protocols, services and concepts to the design, deployment and maintenance of medium to large scale networks. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Design and implement scalable, fault tolerant solutions for facilitating high performance local area and wide area networks. 2. Design and implement policies to provide network security and increased performance. 3. Investigate and evaluate new industry technologies for the purpose of increasing network flexibility and performance. <<Content>> • Border gateway protocol (BGP) • Spanning Tree (STP) • Link aggregation (PAgP, LACP) • Hot standby routing protocol (HSRP), gateway load balancing protocol (GLBP) • Multi area open shortest path first (OSPF) • Virtual routing and forwarding (VRF) • Multi protocol label switching (MPLS) virtual private networks (VPN)  • Software defined networking (SDN) • Quality of service (QoS) <<Prerequisites>> IN615006 <<Co_requisites>> None
IN735001 >>>>>><<Full name>> 1.35. Enterprise Networking, Security and Automation <<Aim>> To enable learners to understand and apply knowledge of architectures and considerations related to designing, securing, operating, and troubleshooting enterprise scale networks. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Design and implement scalable and secure solutions for enterprise networks. 2. Implement network management and monitoring services to provide increased networking availability and integrity. 3. Investigate and evaluate how virtualisation, automation and controller-based architectures affect modern networks. <<Content>> • Network design • Quality of service • Access control lists • Network address translation • Advanced routing protocols • Network virtualisation • Network automation • Network management • Software defined networking <<Prerequisites>> IN615008 <<Co_requisites>> None
IN736001 / IX736001 >>>>>><<Full name>> 1.36. Internet of Things and Cloud Computing <<Aim>>  <<Learning Outcome>> On successful completion of this course, learners will be able to: 1. Analyse models, methodologies and standards in cloud-based information systems infrastructure 2. Critically analyse IoT systems architecture, components, and applications in relation to the cloud 3. Construct technical design specification and develop IoT solutions to be deployed on the cloud <<Content>> • Introduction to the Internet of Things • Machine-to-Machine Communications  • IoT applications, benefits, opportunities, and challenges  • IoT use cases and scenarios (smart home, agritech, healthcare, activity monitoring etc.) • IoT system architecture • IoT cloud platform  • Interoperability in IoT  • IoT networks (Sigfox, LoRa, etc.) • Cloud computing core concepts, benefits, value proposition  • Cloud computing models: IaaS, PaaS, SaaS • Sensor-Cloud  • Cloud applications in the industry • DevOps and cloud • Security of cloud computing • IoT Security <<Prerequisites>> IN620001 and IN609001 <<Co_requisites>> None
IN737001 / IX737001 >>>>>><<Full name>> 1.37. Game Development <<Aim>>  <<Learning Outcome>> On successful completion of this course, learners will be able to: 1. Design and develop a game using industry standard tools, technologies and practices. <<Content>> • Game graphics and audio concepts • Graphical game programming • Game programming with C# • Unity3D Development • Scripting in Unity • AR and VR concepts • Google VR • ARCore  • Game APIs <<Prerequisites>> IN511001/IX511001 <<Co_requisites>> None
IN738001 / IX738001 >>>>>><<Full name>> 1.38. Business Analysis and Intelligence <<Aim>>  <<Learning Outcome>> On successful completion of this course learners will be able to: 1. Select and apply business analysis theories, methods, and tools to solve organisational issues.  2. Analyse characteristics of business problems and the use of artificial intelligence for achieving business intelligence. 3. Analyse data and apply data analytics processes to propose justified recommendations for organisational problems. <<Content>> • Types, roles and skill sets of business analysts  • Business analysis core concepts • Business analysis knowledge areas • Business analysis perspective, tools, and techniques • Business analysis competencies • The digital BA • Machine learning algorithms for business problems • Data-driven innovation and disruption • Potential for business improvements  • Data analytics  • Forecasting for businesses <<Prerequisites>> IN606001 & IN521001/IX521001 <<Co_requisites>> None
IN730151/IX730151 >>>>>><<Full name>> 1.39. Year Three Special Topic <<Aim>> To allow learners to carry out independent exploration into a specific information technology topic to a depth not supported by an existing Bachelor of Information Technology paper.  Learners will negotiate objectives, learning plan, assessment criteria and time frame with a supervising lecturer. <<Learning Outcome>> At the successful completion of this course, learners will be able to: 1. Critically analyse a specific topic whilst applying the underlying principles and concepts to the field of study. <<Content>> Learners will research and apply chosen aspects of their information technology topic.  Sources would typically include academic journals, textbooks, and credible web sites.  Content will include both theoretical material and applied skills development. <<Prerequisites>> 120 L5 credits, 90 L6 credits <<Co_requisites>> None
IN550001 >>>>>><<Full name>> 1.40. Unspecified Credits – Level 5 <<Aim>> This paper is intended to act as a repository for “unspecified credits” where the learner undertakes courses from outside the BInfoTech.  Up to 15 credits of these may normally be used.  Any course that is recognised as contributing to a degree may be used for these credits.  The contribution to a learner’s credit count will be calculated on the basis of EFTS contribution of the external paper (ie 0..125 EFTS = 15 credits). There will be no fee charged for this paper. <<Learning Outcome>> The outcomes for the “unspecified credit” are not described here, as they are, by definition, external.  To be eligible for this paper, the learning outcome of the external papers taken must not significantly overlap with other papers undertaken by that learner. <<Content>> n/a <<Prerequisites>> None <<Co_requisites>> None
IN650001 >>>>>><<Full name>> 1.41. Unspecified Credits – Level 6 <<Aim>> This paper is intended to act as a repository for “unspecified credits” where the learner undertakes courses from outside the BInfoTech.  Up to 15 credits of these may normally be used.  Any course that is recognised as contributing to a degree may be used for these credits.  The contribution to a learner’s credit count will be calculated on the basis of EFTS contribution of the external paper (ie 0.125 EFTS = 15 credits). There will be no fee charged for this paper. <<Learning Outcome>> The outcomes for the “unspecified credit” are not described here, as they are, by definition, external.  To be eligible for this paper, the learning outcome of the external papers taken must not significantly overlap with other papers undertaken by that learner. <<Content>> n/a <<Prerequisites>> None <<Co_requisites>> None
IN750001 >>>>>><<Full name>> 1.42. Unspecified Credits – Level 7 <<Aim>> This paper is intended to act as a repository for “unspecified credits” where the learner undertakes courses from outside the BInfoTech.  Up to 15 credits of these may normally be used.  Any course that is recognised as contributing to a degree may be used for these credits.  The contribution to a learner’s credit count will be calculated on the basis of EFTS contribution of the external paper (ie 0.125 EFTS = 15 credits). There will be no fee charged for this paper. <<Learning Outcome>> The outcomes for the “unspecified credit” are not described here, as they are, by definition, external.  To be eligible for this paper, the learning outcome of the external papers taken must not significantly overlap with other papers undertaken by that learner. <<Content>> n/a <<Prerequisites>> None <<Co_requisites>> None
